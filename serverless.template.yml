AWSTemplateFormatVersion: 2010-09-09
Parameters:
  buildBucketName:
    Type: String
  buildObjectKey:
    Type: String
Resources:
  AddConnectFourMatch:
    Type: 'AWS::Lambda::Function'
    Properties:
      Handler: Portfolio.Backend.Lambda::Portfolio.Backend.Lambda.ConnectFour.ConnectFourFunctions::AddConnectFourMatch
      Runtime: "dotnetcore2.1"
      Code:
        S3Bucket: !Ref buildBucketName
        S3Key: !Ref buildObjectKey
      Timeout: 30
      Role: !ImportValue AddConnectFourMatchRole
  AddConnectFourMatchPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: !Sub "${AddConnectFourMatch.Arn}"
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${PortfolioApi}/*"
  PortfolioApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: Portfolio API
      FailOnWarnings: true
  ConnectFourResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref PortfolioApi
      ParentId: !GetAtt PortalApi.RootResourceId
      PathPart: connectFour
  ConnectFourOptions:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      RestApiId: !Ref PortfolioApi
      ResourceId: !Ref ConnectFourResource
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - StatusCode: '200'
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: ''
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
        - StatusCode: '200'
          ResponseModels:
            application/json: Empty
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false
  ConnectFourPost:
    DependsOn: AddConnectFourMatch
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AddConnectFourMatch.Arn}/invocations"
        IntegrationResponses:
          - StatusCode: '200'
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
      RestApiId: !Ref PortfolioApi
      ResourceId: !Ref ConnectFourResource
      MethodResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: false